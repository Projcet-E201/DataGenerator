plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// Netty 서버를 사용하기 위해서 사용
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'io.netty:netty-all:4.1.86.Final'
	implementation 'com.google.protobuf:protobuf-java:3.19.6'
	implementation 'org.apache.commons:commons-lang3:3.12.0'

	// 데이터 임시보관용 DB
	runtimeOnly 'com.h2database:h2'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// kafka
	implementation 'org.springframework.kafka:spring-kafka'

	// influxDB
	implementation "com.influxdb:influxdb-client-java:6.6.0"

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	compileOnly 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('compileJava') {
	inputs.files(tasks.named('processResources'))
}